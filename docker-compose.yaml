version: "3.9"

services:

  clickhouse:
    image: "yandex/clickhouse-server:21.12"
    container_name: clickhouse
    environment:
      - CLICKHOUSE_DB=uptrace
    healthcheck:
      test: [ 'CMD', 'wget', '--spider', '-q', 'localhost:8123/ping' ]
      interval: 1s
      timeout: 1s
      retries: 30

  uptrace:
    image: "uptrace/uptrace:latest"
    container_name: uptrace
    ports:
      - "14317:14317/tcp" # OTLP
      - "14318:14318/tcp" # UI and HTTP API
    volumes:
      - ./deploys/uptrace/uptrace.yml:/etc/uptrace/uptrace.yml
    environment:
      - DEBUG=1
    depends_on:
      clickhouse:
        condition: service_healthy

  collector:
    image: "otel/opentelemetry-collector:0.48.0"
    container_name: collector
    ports:
      - "4317:4317/tcp"
      - "4318:4318/tcp"
      - "8889:8889"
      - "8888:8888/tcp"
    volumes:
      - ./deploys/collector/config.yaml:/etc/otelcol/config.yaml
    command:
      - "--config=/etc/otelcol/config.yaml"
    restart: on-failure
    depends_on:
      - uptrace

  prometheus:
    image: "prom/prometheus:v2.29.2"
    container_name: prometheus
    ports:
      - "9090:9090/tcp"
    volumes:
      - ./deploys/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--enable-feature=exemplar-storage"
    depends_on:
      - collector
  
  grafana:
    image: grafana/grafana:8.3.3
    container_name: grafana
    ports:
      - "3000:3000/tcp"
    volumes:
      - ./deploys/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ORG_ROLE=Editor
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_USERS_DEFAULT_THEME=light
    depends_on:
      - prometheus

  digit:
    build:
      context: .
      dockerfile: deploys/upper/dockerfile
    restart: on-failure
    depends_on:
      - collector
    ports:
      - "5051:5000/tcp"
    environment:
    - OTEL_EXPORTER_OTLP_ENDPOINT=http://collector:4317

  lower:
    build:
      context: .
      dockerfile: deploys/lower/dockerfile
    restart: on-failure
    depends_on:
      - collector
      - digit
    ports:
      - "5052:5000/tcp"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://collector:4317

  upper:
    build:
      context: .
      dockerfile: deploys/upper/dockerfile
    restart: on-failure
    depends_on:
      - collector
    ports:
      - "5053:5000/tcp"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://collector:4317

  special:
    build:
      context: .
      dockerfile: deploys/upper/dockerfile
    restart: on-failure
    depends_on:
      - collector
    ports:
      - "5054:5000/tcp"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://collector:4317

  generator:
    build:
      context: .
      dockerfile: deploys/generator/dockerfile
    restart: on-failure
    depends_on:
      - digit
      - lower
      - upper
      - special
    ports:
      - "5055:5000/tcp"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://collector:4317

  load:
    build:
      context: .
      dockerfile: deploys/load/dockerfile
    restart: on-failure
    depends_on:
      - generator
    deploy:
      mode: replicated
      replicas: 1